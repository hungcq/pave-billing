// Code generated by MockGen. DO NOT EDIT.
// Source: encore.app/billing/ext_services (interfaces: ExchangeRatesService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "encore.app/billing/models"
	gomock "github.com/golang/mock/gomock"
)

// MockExchangeRatesService is a mock of ExchangeRatesService interface.
type MockExchangeRatesService struct {
	ctrl     *gomock.Controller
	recorder *MockExchangeRatesServiceMockRecorder
}

// MockExchangeRatesServiceMockRecorder is the mock recorder for MockExchangeRatesService.
type MockExchangeRatesServiceMockRecorder struct {
	mock *MockExchangeRatesService
}

// NewMockExchangeRatesService creates a new mock instance.
func NewMockExchangeRatesService(ctrl *gomock.Controller) *MockExchangeRatesService {
	mock := &MockExchangeRatesService{ctrl: ctrl}
	mock.recorder = &MockExchangeRatesServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExchangeRatesService) EXPECT() *MockExchangeRatesServiceMockRecorder {
	return m.recorder
}

// GetRates mocks base method.
func (m *MockExchangeRatesService) GetRates(arg0 context.Context) (*models.RatesData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRates", arg0)
	ret0, _ := ret[0].(*models.RatesData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRates indicates an expected call of GetRates.
func (mr *MockExchangeRatesServiceMockRecorder) GetRates(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRates", reflect.TypeOf((*MockExchangeRatesService)(nil).GetRates), arg0)
}
